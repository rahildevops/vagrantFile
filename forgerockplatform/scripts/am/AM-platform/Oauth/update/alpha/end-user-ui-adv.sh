#### update end-user-ui in alpha advcanced tab
sudo echo "starting end-user-ui in alpha advcanced tab"
  # Make the HTTP PUT request to update end-user-ui OAuth2 client
    curl -X PUT "http://am.example.com:8081/am/json/realms/root/realms/alpha/realm-config/agents/OAuth2Client/end-user-ui" \
      -H "Accept: application/json, text/javascript, */*; q=0.01" \
      -H "Accept-API-Version: protocol=2.0,resource=1.0" \
      -H "Accept-Encoding: gzip, deflate" \
      -H "Accept-Language: en-US" \
      -H "Cache-Control: no-cache" \
      -H "Connection: keep-alive" \
      -H "iPlanetDirectoryPro: $ADMIN_TOKEN" \
      -H "Content-Type: application/json" \
      -H "Host: am.example.com:8081" \
      -H "If-Match: *" \
      -H "Origin: http://am.example.com:8081" \
      -H "Referer: http://am.example.com:8081/am/ui-admin/" \
      -H "User-Agent: Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/135.0.0.0 Safari/537.36 Edg/135.0.0.0" \
      -H "X-Requested-With: XMLHttpRequest" \
      -d '{"_id":"end-user-ui","overrideOAuth2ClientConfig":{"issueRefreshToken":true,"validateScopePluginType":"PROVIDER","tokenEncryptionEnabled":false,"evaluateScopePluginType":"PROVIDER","oidcMayActScript":"[Empty]","oidcClaimsScript":"[Empty]","scopesPolicySet":"oauth2Scopes","accessTokenModificationPluginType":"PROVIDER","authorizeEndpointDataProviderClass":"org.forgerock.oauth2.core.plugins.registry.DefaultEndpointDataProvider","useForceAuthnForMaxAge":false,"oidcClaimsPluginType":"PROVIDER","providerOverridesEnabled":false,"authorizeEndpointDataProviderScript":"[Empty]","statelessTokensEnabled":false,"authorizeEndpointDataProviderPluginType":"PROVIDER","remoteConsentServiceId":null,"enableRemoteConsent":false,"validateScopeClass":"org.forgerock.oauth2.core.plugins.registry.DefaultScopeValidator","usePolicyEngineForScope":false,"evaluateScopeClass":"org.forgerock.oauth2.core.plugins.registry.DefaultScopeEvaluator","overrideableOIDCClaims":[],"accessTokenMayActScript":"[Empty]","evaluateScopeScript":"[Empty]","clientsCanSkipConsent":false,"accessTokenModificationScript":"[Empty]","issueRefreshTokenOnRefreshedToken":true,"validateScopeScript":"[Empty]"},"advancedOAuth2ClientConfig":{"softwareVersion":{"value":"","inherited":false},"logoUri":{"value":[],"inherited":false},"requestUris":{"value":[],"inherited":false},"require_pushed_authorization_requests":{"value":false,"inherited":false},"sectorIdentifierUri":{"value":"","inherited":false},"contacts":{"value":[],"inherited":false},"name":{"value":[],"inherited":false},"policyUri":{"value":[],"inherited":false},"clientUri":{"value":[],"inherited":false},"grantTypes":{"value":["authorization_code","implicit"],"inherited":false},"tokenExchangeAuthLevel":{"value":0,"inherited":false},"descriptions":{"value":[],"inherited":false},"subjectType":{"value":"public","inherited":false},"isConsentImplied":{"value":true,"inherited":false},"tosURI":{"value":[],"inherited":false},"javascriptOrigins":{"value":[],"inherited":false},"tokenEndpointAuthMethod":{"value":"none","inherited":false},"softwareIdentity":{"value":"","inherited":false},"responseTypes":{"value":["code","token","id_token","code token","token id_token","code id_token","code token id_token","device_code","device_code id_token"],"inherited":false},"mixUpMitigation":{"value":false,"inherited":false},"updateAccessToken":{"value":"","inherited":false},"customProperties":{"value":[],"inherited":false},"refreshTokenGracePeriod":{"value":0,"inherited":false}},"signEncOAuth2ClientConfig":{"tokenEndpointAuthSigningAlgorithm":{"inherited":false,"value":"RS256"},"idTokenEncryptionEnabled":{"inherited":false,"value":false},"tokenIntrospectionEncryptedResponseEncryptionAlgorithm":{"inherited":false,"value":"A128CBC-HS256"},"requestParameterSignedAlg":{"inherited":false},"authorizationResponseSigningAlgorithm":{"inherited":false,"value":"RS256"},"clientJwtPublicKey":{"inherited":false},"idTokenPublicEncryptionKey":{"inherited":false},"mTLSSubjectDN":{"inherited":false},"jwkStoreCacheMissCacheTime":{"inherited":false,"value":60000},"jwkSet":{"inherited":false},"idTokenEncryptionMethod":{"inherited":false,"value":"A128CBC-HS256"},"jwksUri":{"inherited":false},"tokenIntrospectionEncryptedResponseAlg":{"inherited":false,"value":"RSA-OAEP-256"},"authorizationResponseEncryptionMethod":{"inherited":false},"userinfoResponseFormat":{"inherited":false,"value":"JSON"},"mTLSCertificateBoundAccessTokens":{"inherited":false,"value":false},"publicKeyLocation":{"inherited":false,"value":"jwks_uri"},"tokenIntrospectionResponseFormat":{"inherited":false,"value":"JSON"},"requestParameterEncryptedEncryptionAlgorithm":{"inherited":false,"value":"A128CBC-HS256"},"userinfoSignedResponseAlg":{"inherited":false},"idTokenEncryptionAlgorithm":{"inherited":false,"value":"RSA-OAEP-256"},"requestParameterEncryptedAlg":{"inherited":false},"authorizationResponseEncryptionAlgorithm":{"inherited":false},"mTLSTrustedCert":{"inherited":false},"jwksCacheTimeout":{"inherited":false,"value":3600000},"userinfoEncryptedResponseAlg":{"inherited":false},"idTokenSignedResponseAlg":{"inherited":false,"value":"RS256"},"tokenIntrospectionSignedResponseAlg":{"inherited":false,"value":"RS256"},"userinfoEncryptedResponseEncryptionAlgorithm":{"inherited":false,"value":"A128CBC-HS256"}},"coreOAuth2ClientConfig":{"secretLabelIdentifier":{"inherited":false},"status":{"inherited":false,"value":"Active"},"clientName":{"inherited":false,"value":[]},"clientType":{"inherited":false,"value":"Public"},"loopbackInterfaceRedirection":{"inherited":false,"value":false},"defaultScopes":{"inherited":false,"value":[]},"refreshTokenLifetime":{"inherited":false,"value":0},"scopes":{"inherited":false,"value":["openid","fr:idm:*"]},"accessTokenLifetime":{"inherited":false,"value":0},"redirectionUris":{"inherited":false,"value":["http://enduser.example.com:8888/appAuthHelperRedirect.html","http://enduser.example.com:8888/sessionCheck.html"]},"authorizationCodeLifetime":{"inherited":false,"value":0}},"coreOpenIDClientConfig":{"claims":{"inherited":false,"value":[]},"backchannel_logout_uri":{"inherited":false},"defaultAcrValues":{"inherited":false,"value":[]},"jwtTokenLifetime":{"inherited":false,"value":0},"defaultMaxAgeEnabled":{"inherited":false,"value":false},"clientSessionUri":{"inherited":false},"defaultMaxAge":{"inherited":false,"value":600},"postLogoutRedirectUri":{"inherited":false,"value":[]},"backchannel_logout_session_required":{"inherited":false,"value":false}},"coreUmaClientConfig":{"claimsRedirectionUris":{"inherited":false,"value":[]}},"_type":{"_id":"OAuth2Client","name":"OAuth2 Clients","collection":true}}' \
      -o /vagrant/curl_response.json \
      -v 2>> /vagrant/curl_error.log

    # Check the curl exit status
    if [ $? -ne 0 ]; then
      echo "curl request failed. Check /vagrant/curl_error.log for details."
      exit 1
    fi

    # Log completion
    echo "Request completed at $(date)" >> /vagrant/curl_request.log
